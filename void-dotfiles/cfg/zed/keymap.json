// # =============================================================================== #
// # Zed Keybidings:                                                                 #
// # =============================================================================== #
[
	// # =============================================================================== #
	// # global key bindings:                                                            #
	// # =============================================================================== #
	{
		"bindings": {
			// # =============================================================================== #
			// # Menu:                                                                           #
			// # =============================================================================== #
			"ctrl-h": "workspace::ActivatePaneLeft",
			"ctrl-l": "workspace::ActivatePaneRight",
			"ctrl-j": "menu::SelectNext",
			"ctrl-k": "menu::SelectPrevious",
			"tab": "menu::Confirm"
		}
	},
	// # =============================================================================== #
	// # Editor Or Workspace:                                                            #
	// # =============================================================================== #
	{
		"context": "Editor || Workspace",
		"bindings": {
			"ctrl+e": "workspace::ToggleLeftDock",
			"ctrl-k": "workspace::ActivatePaneUp",
			"ctrl-j": "workspace::ActivatePaneDown",
			"ctrl-w h": "workspace::ActivatePaneLeft",
			"ctrl-w l": "workspace::ActivatePaneRight",
			"ctrl-w k": "workspace::ActivatePaneUp",
			"ctrl-w j": "workspace::ActivatePaneDown"
		}
	},
	// # =============================================================================== #
	// # Git Pannel:                                                                     #
	// # =============================================================================== #
	{
		"context": "GitPanel && ChangesList",
		"bindings": {
			"space g g": "git_panel::ToggleFocus",
			"cmd-enter": "git::Commit",
			"escape": "git_panel::ToggleFocus",
			"c": "git::Commit",
			"d": "git::RestoreFile",
			"q": "git_panel::Close",
			"s": "git::StageFile",
			"a": "git::StageAll",
			"u": "git::UnstageFile",
			"P": "git::Push"
		}
	},
	// # =============================================================================== #
	// # Git Diff:                                                                       #
	// # =============================================================================== #
	{
		"context": "GitDiff > Editor && (vim_mode == normal || vim_mode == helix_normal || vim_mode == visual) && !VimWaiting && !menu",
		"use_key_equivalents": true,
		"bindings": {
			"s": "git::StageAndNext",
			"u": "git::UnstageAndNext"
		}
	},
	// # =============================================================================== #
	// # put key-bindings here if you want them to work in normal & visual mode:         #
	// # =============================================================================== #
	{
		"context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
		"bindings": {
			// # Git:                                                                            #
			// # =============================================================================== #
			"space g i": "git::Init",
			"space g a": "git::StageAll",
			"space g A": "git::UnstageAll",
			"space g c": "git::Commit",
			"space g C": "git::Uncommit",
			"space g p": "git::Push",
			"space g P": "git::Pull",
			"space g d": "git::Diff",
			"space g h": "editor::ToggleSelectedDiffHunks",
			"space g g": "git_panel::ToggleFocus",
			// # =============================================================================== #
			// # Toggle File Explorer :                                                           #
			// # =============================================================================== #
			"space e": "workspace::ToggleLeftDock",
			// # =============================================================================== #
			// # Toggle inlay hints:                                                             #
			// # =============================================================================== #
			"space t i": "editor::ToggleInlayHints",
			// # =============================================================================== #
			// # Toggle soft wrap:                                                               #
			// # =============================================================================== #
			"space u w": "editor::ToggleSoftWrap",
			// # =============================================================================== #
			// # NOTE: Toggle Zen mode, not fully working yet:                                   #
			// # =============================================================================== #
			"space w c": "workspace::ToggleCenteredLayout",
			// # =============================================================================== #
			// # Open markdown preview:                                                          #
			// # =============================================================================== #
			"space m p": "markdown::OpenPreview",
			"space m P": "markdown::OpenPreviewToTheSide",
			// # =============================================================================== #
			// # Open project:                                                                   #
			// # =============================================================================== #
			"space f p": "projects::OpenRecent",
			// # =============================================================================== #
			// # Fuzzy Search project:                                                           #
			// # =============================================================================== #
			"space f f": "file_finder::Toggle",
			// # =============================================================================== #
			// # Search in all the files:                                                         #
			// # ===============================================================================  #
			"space f t": "workspace::NewSearch",
			// # =============================================================================== #
			// # Search word under cursor:                                                       #
			// # =============================================================================== #
			"space f w": "pane::DeploySearch",
			// # =============================================================================== #
			// # Chat with AI:                                                                   #
			// # =============================================================================== #
			"space a c": "assistant::ToggleFocus",
			// # =============================================================================== #
			// # Go to file with `gf`:                                                           #
			// # =============================================================================== #
			"g f": "editor::OpenExcerpts",
			// # =============================================================================== #
			// # New file:                                                                       #
			// # =============================================================================== #
			"space f n": "workspace::NewFile",
			// # =============================================================================== #
			// # Quit zed:                                                                       #
			// # =============================================================================== #
			"space q q": "zed::Quit"
		}
	},
	// # =============================================================================== #
	// # Tasks zed:                                                                      #
	// # =============================================================================== #
	{
		"context": "Editor && vim_mode == normal && vim_operator == none && !VimWaiting",
		"bindings": {
			"space g l": [
				"task::Spawn",
				{ "task_name": "Lazygit", "reveal_target": "center" }
			],
			"space f d": [
				"task::Spawn",
				{ "task_name": "Zoxide", "reveal_target": "center" }
			],
			"space f z": [
				"task::Spawn",
				{ "task_name": "File_finder", "reveal_target": "center" }
			]
		}
	},
	// # =============================================================================== #
	// # put key-bindings here if you want them to work only in normal mode              #
	// # =============================================================================== #
	{
		"context": "Editor && vim_mode == normal && !VimWaiting && !menu",
		"bindings": {
			// # Window movement bindings                                                        #
			// # =============================================================================== #
			"ctrl-h": "workspace::ActivatePaneLeft",
			"ctrl-l": "workspace::ActivatePaneRight",
			"ctrl-k": "workspace::ActivatePaneUp",
			"ctrl-j": "workspace::ActivatePaneDown",
			// # =============================================================================== #
			// # +LSP:                                                                           #
			// # =============================================================================== #
			"space c a": "editor::ToggleCodeActions",
			"space .": "editor::ToggleCodeActions",
			"space c r": "editor::Rename",
			"g d": "editor::GoToDefinition",
			"g D": "editor::GoToDefinitionSplit",
			"g i": "editor::GoToImplementation",
			"g I": "editor::GoToImplementationSplit",
			"g t": "editor::GoToTypeDefinition",
			"g T": "editor::GoToTypeDefinitionSplit",
			"g r": "editor::FindAllReferences",
			"] d": "editor::GoToDiagnostic",
			"[ d": "editor::GoToPreviousDiagnostic",
			// # =============================================================================== #
			// # TODO: Go to next/prev error:                                                    #
			// # =============================================================================== #
			"] e": "editor::GoToDiagnostic",
			"[ e": "editor::GoToPreviousDiagnostic",
			// # =============================================================================== #
			// # Symbol search:                                                                  #
			// # =============================================================================== #
			"space o": "outline::Toggle",
			"space p": "project_symbols::Toggle",
			// # =============================================================================== #
			// # Diagnostic:                                                                     #
			// # =============================================================================== #
			"space x x": "diagnostics::Deploy",
			// # =============================================================================== #
			// # +Git:                                                                           #
			// # Git prev/next hunk:                                                             #
			// # =============================================================================== #
			"] h": "editor::GoToHunk",
			"[ h": "editor::GoToPreviousHunk",
			// # TODO: git diff is not ready yet, refer https://github.com/zed-industries/zed/issues/8665#issuecomment-2194000497
			// # + Buffers                                                                       #
			// # =============================================================================== #
			// # =============================================================================== #
			// # Switch between buffers:                                                         #
			// # =============================================================================== #
			"shift-Tab": "pane::ActivatePreviousItem",
			"Tab": "pane::ActivateNextItem",
			// # =============================================================================== #
			// Close active panel:                                                               #
			// # =============================================================================== #
			"space wq": "pane::CloseActiveItem",
			"space b d": "pane::CloseActiveItem",
			// # =============================================================================== #
			// # Close other items:                                                              #
			// # =============================================================================== #
			"space b b": "pane::CloseInactiveItems",
			"space b o": "pane::CloseInactiveItems",
			// # =============================================================================== #
			// # Save file:                                                                      #
			// # =============================================================================== #
			"ctrl-s": "workspace::Save",
			// # =============================================================================== #
			// # File finder:                                                                    #
			// # =============================================================================== #
			"space space": "file_finder::Toggle",
			// # =============================================================================== #
			// # Project search:                                                                 #
			// # =============================================================================== #
			"space t": "pane::DeploySearch"
			// # =============================================================================== #
			// TODO: Open other files
			// Show project panel with current file
			// "space e": "pane::RevealInProjectPanel"
			// # =============================================================================== #
		}
	},
	// # =============================================================================== #
	// # Empty pane, set of keybindings that are available when there is no active editor#
	// # =============================================================================== #
	{
		"context": "EmptyPane || SharedScreen",
		"bindings": {
			"space f f": "file_finder::Toggle",
			"space f p": "projects::OpenRecent",
			"space e": "workspace::ToggleLeftDock"
		}
	},
	// # =============================================================================== #
	// # visual, visual line & visual block modes:                                       #
	// # =============================================================================== #
	{
		"context": "Editor && vim_mode == visual && !VimWaiting && !menu",
		"bindings": {
			"g c": "editor::ToggleComments"
		}
	},
	// # =============================================================================== #
	// # Menu  Completions:                                                              #
	// # =============================================================================== #
	{
		"context": "Editor && vim_mode == insert && (showing_code_actions || showing_completions)",
		"bindings": {
			"ctrl+n": "editor::OpenContextMenu",
			"ctrl-j": "editor::ContextMenuNext",
			"ctrl-k": "editor::ContextMenuPrevious",
			"pageup": "editor::ContextMenuFirst",
			"pagedown": "editor::ContextMenuLast"
		}
	},
	// # =============================================================================== #
	// # Insert Mode:                                                                    #
	// # =============================================================================== #
	{
		"context": "Editor && vim_mode == insert",
		"bindings": {
			"ctrl+j": "menu::SelectNext",
			"ctrl+k": "menu::SelectNext"
		}
	},
	// # =============================================================================== #
	// # Rename:                                                                         #
	// # =============================================================================== #
	{
		"context": "Editor && vim_operator == c",
		"bindings": {
			"c": "vim::CurrentLine",
			"r": "editor::Rename"
		}
	},
	// # =============================================================================== #
	// # Code Action:                                                                    #
	// # =============================================================================== #
	{
		"context": "Editor && vim_operator == c",
		"bindings": {
			"c": "vim::CurrentLine",
			"a": "editor::ToggleCodeActions"
		}
	},
	// # =============================================================================== #
	// # Toggle terminal:                                                                #
	// # =============================================================================== #
	{
		"context": "Workspace",
		"bindings": {
			"ctrl-t": "workspace::ToggleBottomDock"
		}
	},
	{
		"context": "Terminal",
		"bindings": {
			"ctrl-enter": "workspace::NewTerminal",
			"ctrl-t": "workspace::ToggleBottomDock",
			"ctrl-h": "workspace::ActivatePaneLeft",
			"ctrl-l": "workspace::ActivatePaneRight",
			"ctrl-k": "workspace::ActivatePaneUp",
			"ctrl-j": "workspace::ActivatePaneDown",
			"ctrl-z": "workspace::ToggleZoom"
		}
	},
	// # =============================================================================== #
	// # File panel (netrw):                                                             #
	// # =============================================================================== #
	{
		"context": "ProjectPanel && not_editing",
		"bindings": {
			"a": "project_panel::NewFile",
			"A": "project_panel::NewDirectory",
			"r": "project_panel::Rename",
			"d": "project_panel::Delete",
			"x": "project_panel::Cut",
			"y": "project_panel::Copy",
			"p": "project_panel::Paste",
			"z": "project_panel::CollapseAllEntries",
			"q": "workspace::ToggleLeftDock",
			"Tab": "project_panel::OpenPermanent",
			":": "command_palette::Toggle",
			"%": "project_panel::NewFile",
			"/": "project_panel::NewSearchInDirectory",
			"enter": "project_panel::OpenPermanent",
			"escape": "project_panel::ToggleFocus",
			"h": "project_panel::CollapseSelectedEntry",
			"j": "menu::SelectNext",
			"k": "menu::SelectPrevious",
			"l": "project_panel::ExpandSelectedEntry",
			"o": "project_panel::OpenPermanent",
			"shift-d": "project_panel::Delete",
			"shift-r": "project_panel::Rename",
			"t": "project_panel::OpenPermanent",
			"v": "project_panel::OpenPermanent",
			"shift-g": "menu::SelectLast",
			"g g": "menu::SelectFirst",
			"-": "project_panel::SelectParent",
			"ctrl-6": "pane::AlternateFile",
			"space e": "workspace::ToggleLeftDock",
			"ctrl-h": "workspace::ActivatePaneLeft",
			"ctrl-l": "workspace::ActivatePaneRight",
			"ctrl-k": "workspace::ActivatePaneUp",
			"ctrl-j": "workspace::ActivatePaneDown"
		}
	},
	// # =============================================================================== #
	// # Panel nagivation:                                                               #
	// # =============================================================================== #
	{
		"context": "Dock",
		"bindings": {
			"ctrl-h": "workspace::ActivatePaneLeft",
			"ctrl-l": "workspace::ActivatePaneRight",
			"ctrl-k": "workspace::ActivatePaneUp",
			"ctrl-j": "workspace::ActivatePaneDown",
			"ctrl-w h": "workspace::ActivatePaneLeft",
			"ctrl-w l": "workspace::ActivatePaneRight",
			"ctrl-w k": "workspace::ActivatePaneUp",
			"ctrl-w j": "workspace::ActivatePaneDown"
		}
	},
	// # =============================================================================== #
	// # Run nearest task:                                                               #
	// # =============================================================================== #
	{
		"context": "EmptyPane || SharedScreen || vim_mode == normal",
		"bindings": {
			"space r t": ["editor::SpawnNearestTask", { "reveal": "no_focus" }]
		}
	},
	// # =============================================================================== #
	// Sneak motion:                                                                     #
	// # =============================================================================== #
	{
		"context": "vim_mode == normal || vim_mode == visual",
		"bindings": {
			"s": ["vim::PushSneak", {}],
			"S": ["vim::PushSneakBackward", {}]
		}
	}
	// Subword motion is not working really nice with `ciw`, disable for now
	// {
	//   "context": "VimControl && !menu",
	//   "bindings": {
	//     "w": "vim::NextSubwordStart",
	//     "b": "vim::PreviousSubwordStart",
	//     "e": "vim::NextSubwordEnd",
	//     "g e": "vim::PreviousSubwordEnd"
	//   }
	// }
]
