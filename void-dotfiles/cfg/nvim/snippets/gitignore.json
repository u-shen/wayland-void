{
	"react.gitignore": {
		"prefix": "react.gitignore",
		"body": [
			"# Logs",
			"logs",
			"*.log",
			"npm-debug.log*",
			"yarn-debug.log*",
			"yarn-error.log*",
			"pnpm-debug.log*",
			"lerna-debug.log*",
			"",
			"node_modules",
			"dist",
			"dist-ssr",
			"*.local",
			"",
			"# Editor directories and files",
			".vscode/*",
			"!.vscode/extensions.json",
			".idea",
			".DS_Store",
			"*.suo",
			"*.ntvs*",
			"*.njsproj",
			"*.sln",
			"*.sw?"
		],
		"description": "snip_vite_react.gitignore"
	},
	"nextjs.gitignore": {
		"prefix": "nextjs.gitignore",
		"body": [
			"### NextJS ###",
			"# dependencies",
			"/node_modules",
			"/.pnp",
			".pnp.js",
			"",
			"# testing",
			"/coverage",
			"",
			"# next.js",
			"/.next/",
			"/out/",
			"",
			"# production",
			"/build",
			"",
			"# misc",
			".DS_Store",
			"*.pem",
			"",
			"# debug",
			"npm-debug.log*",
			"yarn-debug.log*",
			"yarn-error.log*",
			".pnpm-debug.log*",
			"",
			"# local env files",
			".env*.local",
			"",
			"# vercel",
			".vercel",
			"",
			"# typescript",
			"*.tsbuildinfo",
			"next-env.d.ts"
		],
		"description": "snip_nextjs.gitignore"
	},
	"nodejs.gitignore": {
		"prefix": "nodejs.gitignore",
		"body": [
			"# Environment variable files",
			".env",
			".env.development",
			".env.production",
			"",
			".env.development.local",
			".env.test.local",
			".env.production.local",
			".env.local",
			"",
			"# Dependency directories",
			"node_modules/",
			"jspm_packages/",
			"",
			"# Next.js build output",
			".next",
			"out",
			"",
			"# Nuxt.js build / generate output",
			".nuxt",
			"dist",
			"",
			"# Logs",
			"logs",
			"*.log",
			"npm-debug.log*",
			"yarn-debug.log*",
			"yarn-error.log*",
			"lerna-debug.log*",
			".pnpm-debug.log*",
			"",
			"# Diagnostic reports (https://nodejs.org/api/report.html)",
			"report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
			"",
			"# Runtime data",
			"pids",
			"*.pid",
			"*.seed",
			"*.pid.lock",
			"",
			"# Directory for instrumented libs generated by jscoverage/JSCover",
			"lib-cov",
			"",
			"# Coverage directory used by tools like istanbul",
			"coverage",
			"*.lcov",
			"",
			"# nyc test coverage",
			".nyc_output",
			"",
			"# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)",
			".grunt",
			"",
			"# Bower dependency directory (https://bower.io/)",
			"bower_components",
			"",
			"# node-waf configuration",
			".lock-wscript",
			"",
			"# Compiled binary addons (https://nodejs.org/api/addons.html)",
			"build/Release",
			"",
			"# Snowpack dependency directory (https://snowpack.dev/)",
			"web_modules/",
			"",
			"# TypeScript cache",
			"*.tsbuildinfo",
			"",
			"# Optional npm cache directory",
			".npm",
			"",
			"# Optional eslint cache",
			".eslintcache",
			"",
			"# Optional stylelint cache",
			".stylelintcache",
			"",
			"# Microbundle cache",
			".rpt2_cache/",
			".rts2_cache_cjs/",
			".rts2_cache_es/",
			".rts2_cache_umd/",
			"",
			"# Optional REPL history",
			".node_repl_history",
			"",
			"# Output of 'npm pack'",
			"*.tgz",
			"",
			"# Yarn Integrity file",
			".yarn-integrity",
			"",
			"# parcel-bundler cache (https://parceljs.org/)",
			".cache",
			".parcel-cache",
			"",
			"# Gatsby files",
			".cache/",
			"# Comment in the public line in if your project uses Gatsby and not Next.js",
			"# https://nextjs.org/blog/next-9-1#public-directory-support",
			"# public",
			"",
			"# vuepress build output",
			".vuepress/dist",
			"",
			"# vuepress v2.x temp and cache directory",
			".temp",
			".cache",
			"",
			"# Docusaurus cache and generated files",
			".docusaurus",
			"",
			"# Serverless directories",
			".serverless/",
			"",
			"# FuseBox cache",
			".fusebox/",
			"",
			"# DynamoDB Local files",
			".dynamodb/",
			"",
			"# TernJS port file",
			".tern-port",
			"",
			"# Stores VSCode versions used for testing VSCode extensions",
			".vscode-test",
			"",
			"# yarn v2",
			".yarn/cache",
			".yarn/unplugged",
			".yarn/build-state.yml",
			".yarn/install-state.gz",
			".pnp.*"
		],
		"description": "snip_nodejs.gitignore"
	},
	"go.gitignore": {
		"prefix": "go.gitignore",
		"body": [
			"# Binaries for programs and plugins",
			"*.exe",
			"*.exe~",
			"*.dll",
			"*.so",
			"*.dylib",
			"",
			"# Test binary, built with `go test -c`",
			"*.test",
			"",
			"# Output of the go coverage tool, specifically when used with LiteIDE",
			"*.out",
			"",
			"# Dependency directories (remove the comment below to include it)",
			"# vendor/",
			"",
			"# Go workspace file",
			"go.work",
			"go.work.sum",
			"",
			"# env file",
			".env"
		],
		"description": "snip_go.gitignore"
	},
	"lua.gitignore": {
		"prefix": "lua.gitignore",
		"body": [
			"# Compiled Lua sources",
			"luac.out",
			"",
			"# luarocks build files",
			"*.src.rock",
			"*.zip",
			"*.tar.gz",
			"",
			"# Object files",
			"*.o",
			"*.os",
			"*.ko",
			"*.obj",
			"*.elf",
			"",
			"# Precompiled Headers",
			"*.gch",
			"*.pch",
			"",
			"# Libraries",
			"*.lib",
			"*.a",
			"*.la",
			"*.lo",
			"*.def",
			"*.exp",
			"",
			"# Shared objects (inc. Windows DLLs)",
			"*.dll",
			"*.so",
			"*.so.*",
			"*.dylib",
			"",
			"# Executables",
			"*.exe",
			"*.out",
			"*.app",
			"*.i*86",
			"*.x86_64",
			"*.hex"
		],
		"description": "snip_lua.gitignore"
	}
}
